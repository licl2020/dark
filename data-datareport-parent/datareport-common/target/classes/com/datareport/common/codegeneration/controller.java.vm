package ${package.Controller};

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestMethod;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import org.springframework.beans.factory.annotation.Autowired;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Service}.${table.serviceName};
import com.dofun.common.DatatablesJSON;
import com.dofun.common.JSONResult;
import ${package.Entity}.${entity};
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *   @description : ${entity} 控制器
 *   @author ${author}
 *   @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
private final Logger logger=LoggerFactory.getLogger(${table.controllerName}.class);

@Autowired
public ${table.serviceName} ${table.entityPath}Service;

/**
 * @description : 获取分页列表
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/get${entity}List", method = RequestMethod.POST)
public Object get${entity}List(${entity} param,@RequestParam(value = "draw", defaultValue = "0") Integer draw,
@RequestParam(value = "length") Integer length,
@RequestParam(value = "start") Integer start){
        DatatablesJSON<${entity}> resJson=new DatatablesJSON<>();
        try{
##        Integer pageNo=getPageNo(start,length);
        Integer pageNo=1;
        Page<${entity}> page=new Page<${entity}>(pageNo,length);
        ${table.entityPath}Service.page(page,new QueryWrapper<${entity}>(param));
        resJson.setDraw(draw++);
        resJson.setRecordsTotal(page.getTotal());
        resJson.setRecordsFiltered(page.getTotal());
        resJson.setData(page.getRecords());
        resJson.setSuccess(true);
        }catch(Exception e){
        resJson.setSuccess(false);
        resJson.setError("异常信息:{"+e.getClass().getName()+"}");
        logger.info("异常信息:{}"+e.getMessage());
        }
        return resJson;
        }

/**
 * @description : 通过id获取${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/get${entity}ById", method = RequestMethod.GET)
public Object get${entity}ById(String id){
        JSONResult<${entity}> resJson=new JSONResult<>();
        try{
    ${entity} param= ${table.entityPath}Service.getById(id);
        resJson.setData(param);
        resJson.setSuccess(true);
        }catch(Exception e){
        resJson.setSuccess(false);
        resJson.setMessage("异常信息:{"+e.getClass().getName()+"}");
        logger.info("异常信息:{}"+e.getMessage());
        }
        return resJson;
        }

/**
 * @description : 通过id删除${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/delete${entity}ById", method = RequestMethod.GET)
public Object delete${entity}ById(String id){
        JSONResult<${entity}> resJson=new JSONResult<>();
        try{
        resJson.setSuccess(${table.entityPath}Service.removeById(id));
        }catch(Exception e){
        resJson.setSuccess(false);
        resJson.setMessage("异常信息:{"+e.getClass().getName()+"}");
        logger.info("异常信息:{}"+e.getMessage());
        }
        return resJson;
        }

/**
 * @description : 通过id更新${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/update${entity}ById", method = RequestMethod.POST)
public Object update${entity}ById(${entity} param){
        JSONResult<${entity}> resJson=new JSONResult<>();
        try{
        resJson.setSuccess(${table.entityPath}Service.updateById(param));
        }catch(Exception e){
        resJson.setSuccess(false);
        resJson.setMessage("异常信息:{"+e.getClass().getName()+"}");
        logger.info("异常信息:{}"+e.getMessage());
        }
        return resJson;
        }

/**
 * @description : 添加${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/add${entity}", method = RequestMethod.POST)
public Object add${entity}(${entity} param){
        JSONResult<${entity}> resJson=new JSONResult<>();
        try{
        resJson.setSuccess(${table.entityPath}Service.save(param));
        }catch(Exception e){
        resJson.setSuccess(false);
        resJson.setMessage("异常信息:{"+e.getClass().getName()+"}");
        logger.info("异常信息:{}"+e.getMessage());
        }
        return resJson;
        }
        }